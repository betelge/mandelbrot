
attribute vec3 position;

uniform vec2 scale;
uniform vec2 offset;

varying float speed2;

vec2 iter(vec2 z)
{
	return vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;
}

void main(void)
{
	vec2 c = 2.*(scale*position.xy + offset);

	vec2 z = vec2(0.0, 0.0);
	
	int i;
	int max = int(MAX_ITER);
	for( i=0; i<max; i++ ) {
		if(z.x*z.x + z.y*z.y > 4.0) break;
		z = iter(z);
	}
	
	speed2 = (i == max ? 0.0 : float(i)) / MAX_ITER;
	
	gl_Position = vec4(position, 1.0);
}